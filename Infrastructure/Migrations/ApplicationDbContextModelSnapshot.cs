// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnetcoreproject.Infrastructure.Data;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Forms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormTypeId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.ContentPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContentOrderNo")
                        .HasColumnType("int");

                    b.Property<string>("ContentShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentTypes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClick")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFooterMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHamburgerMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeaderMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSideMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSubMenu")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("OrjId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("TagManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemplateType")
                        .HasColumnType("int");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormTypeId");

                    b.HasIndex("OrjId");

                    b.HasIndex("ParentId");

                    b.ToTable("ContentPage");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.Documents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContentPageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<int?>("FormsId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDesktop")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMobile")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContentPageId");

                    b.HasIndex("FormsId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.FormType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FormType");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.Lang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lang");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.LangDisplay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("ParamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LangDisplay");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.SiteConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SiteConfig");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("NameSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain.Entities.Forms", b =>
                {
                    b.HasOne("dotnetcoreproject.Domain.Entities.FormType", "FormType")
                        .WithMany("Forms")
                        .HasForeignKey("FormTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormType");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.ContentPage", b =>
                {
                    b.HasOne("dotnetcoreproject.Domain.Entities.FormType", "FormType")
                        .WithMany("ContentPages")
                        .HasForeignKey("FormTypeId");

                    b.HasOne("dotnetcoreproject.Domain.Entities.ContentPage", "Orj")
                        .WithMany("OrjRelation")
                        .HasForeignKey("OrjId");

                    b.HasOne("dotnetcoreproject.Domain.Entities.ContentPage", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("FormType");

                    b.Navigation("Orj");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.Documents", b =>
                {
                    b.HasOne("dotnetcoreproject.Domain.Entities.ContentPage", "ContentPage")
                        .WithMany("Documents")
                        .HasForeignKey("ContentPageId");

                    b.HasOne("Domain.Entities.Forms", "Forms")
                        .WithMany("Documents")
                        .HasForeignKey("FormsId");

                    b.Navigation("ContentPage");

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("Domain.Entities.Forms", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.ContentPage", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Documents");

                    b.Navigation("OrjRelation");
                });

            modelBuilder.Entity("dotnetcoreproject.Domain.Entities.FormType", b =>
                {
                    b.Navigation("ContentPages");

                    b.Navigation("Forms");
                });
#pragma warning restore 612, 618
        }
    }
}
